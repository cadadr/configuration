# -*- org -*-
#+title: Göktuğ's Configuration
#+options: toc:nil

* Introduction
#+BEGIN_QUOTE
Sic transit gloria mundi.
#+END_QUOTE

Welcome to Göktuğ's Configuration, a work of artisanal love and care
aimed at making the personal computer use a joyful activity, instead
of endless agony and trade-offs in the era of inconfigurable apps
designed with biblical unquestionable dogmas imposed on the users by
the people that go by the D-word as their job title.  My computer is
my atelier, not an exhibition, so I demand that I'm able to touch,
move and modify anything in any way.

This repo contains the following:

- My GNU Emacs configuration tree (~emacs.d/~)
- My dotfiles (~dotfiles/~,  ~xdg-config/~)
- My Arch GNU/Linux configuration (~arch/~)
- My configuration for Raspberry Pi (~rpi/~)
- And some other stuff.

I've re-created this repository from scratch, removing some secrets
for publishing.  If you want to use any part of my configurations,
you're free to do so, but *do not* try to use it as is, it's complex
and personal, and some additional secret stuff is not included, so it
won't work reliably.  Just cherry-pick what you want.

Lots of files created by other people are included in this repository,
most of the time verbatim.  Any file that does not include a statement
for its licence terms is probably written by me, and I hereby put all
of them in public domain.

* Installation
** System setup
I have recently switched from Debian to Arch and thus this setup is
not very streamlined.  Read the scripts to see what they are doing.

[[./arch/install.sh]] is a list of commands used while installing Arch.
It's more of a page of notes than a proper, tested, working script.
Also, it's personal in that it assumes a certain partition layout.

In order to get this configuration running on a vanilla Arch
installation, run the following commands:

#+BEGIN_EXAMPLE
$ touch config.m4
# cd arch
# $(perl pkglist2cmds.pl)
# sh init.sh
# make install-config clean
$ cd ..
$ make build
$ ./bin/invade -v $HOME
#+END_EXAMPLE

The initial ~#~ is meant to indicate that the command need be run as
the superuser, while ~$~ is for commands that are run as a normal
user.

These commands, among other things, will create a user ~g~ with uid
1993 and a group of similar identifiers, and assing the user certain
groups.
